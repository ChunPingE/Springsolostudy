<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<bean id="target" class="AOPstudy.aop.entity.NewlecExam" p:kor="1"
		p:eng="1" p:math="1" p:com="1" />

	<!-- 핸들러 -->
	<bean id="logAroundAdvice"
		class="AOPstudy.aop.advice.LogAroundAdvice" />
	<bean id="logBeforeAdivce"
		class="AOPstudy.aop.advice.LogBeforeAdivce" />
	<bean id="logAfterReturningAdivce"
		class="AOPstudy.aop.advice.LogAfterReturningAdivce" />
	<bean id="logThrowingAdivce"
		class="AOPstudy.aop.advice.LogThrowingAdivce" />

	<!-- 포인트 컷 -->
	<!-- <bean id="classicPointCut" class="org.springframework.aop.support.NameMatchMethodPointcut"> 
		<property name="mappedName" value="total"/> </bean> <bean id="classicBeforeAdvisor" 
		class="org.springframework.aop.support.DefaultPointcutAdvisor"> <property 
		name="advice" ref="logBeforeAdivce"/> <property name="pointcut" ref="classicPointCut"/> 
		</bean> -->

	<bean id="classicBeforeAdvisor"
		class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="logBeforeAdivce" />
		<property name="mappedNames">
			<list>
				<value>total</value>
			</list>
		</property>
	</bean>

	<bean id="classicArroundAdvisor"
		class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="logAroundAdvice" />
		<property name="pointcut" ref="classicPointCut" />
	</bean>

	<!-- 프록시 -->
	<bean id="proxy"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="target" />
		<property name="interceptorNames">
			<list>
				<!-- <value>logAroundAdvice</value> -->
				<value>classicArroundAdvisor</value>
				<!-- <value>logBeforeAdivce</value> -->
				<value>classicBeforeAdvisor</value>
				<value>logAfterReturningAdivce</value>
				<!-- <value>logThrowingAdivce</value> -->
			</list>
		</property>
	</bean>


	<!-- <context:component-scan base-package="spring.di.ui, spring.di.entity"/> -->
	<!-- <context:annotation-config/> -->
	<!-- Exam exam = new NewlecExam(); -->
	<!-- exam.setKor(20); exam.setEng(50) -->
	<!-- <bean id="exam" class="spring.di.entity.NewlecExam"> <property name="kor" 
		value ="10"/> <property name="eng" value ="10"/> <property name="math" value 
		="10"/> <property name="com"> <value>10</value> </property> </bean> -->
	<!-- Exam exam = new NewlecExam(10,10,10,10); -->
	<!-- <bean id="exam" class="spring.di.entity.NewlecExam"> <constructor-arg 
		name="kor" value="10"/> <constructor-arg name="eng" value="20"/> <constructor-arg 
		name="com" value="30"/> <constructor-arg name="math" value="40"/> </bean> -->

	<!-- <bean id="exam" class="spring.di.entity.NewlecExam" p:kor="10" p:eng="10"/> -->
	<!-- <bean id="exam2" class="spring.di.entity.NewlecExam" p:kor="20" p:eng="20"/> -->

	<!-- <util:list id="exams" list-class="java.util.ArrayList"> <bean class="spring.di.entity.NewlecExam" 
		p:kor="10" p:eng="10"/> <ref bean = "exam"/> </util:list> -->

	<!-- <bean id="exams" class="java.util.ArrayList"> <constructor-arg> <list> 
		<bean class="spring.di.entity.NewlecExam" p:kor="1" p:eng="1" /> <ref bean="exam" 
		/> </list> </constructor-arg> </bean> -->

	<!-- <bean id="console" class="spring.di.ui.GridExamConsole"> -->
	<!-- <bean id="console" class="spring.di.ui.InlineExamConsole"> <property 
		name="exam" ref="exam" /> console.setExam(exam); </bean> -->



</beans>
